name: ci-cd
on: push
env:
    NODE_VERSION: '14.18.0'

jobs:
    build:
        name: build
        runs-on: ubuntu-latest

        steps:
        - name: checkout repository
          uses: actions/checkout@v2

        - name: load/save cache
          uses: actions/cache@v2
          with:
              path: |
                  build
                  node_modules
                  .pnp
                  .pnp.js
              key: ${{ runner.os }}-package-lock-v1-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                  ${{ runner.os }}-package-lock-v1-

        - name: setup node.js
          uses: actions/setup-node@v1
          with:
              node-version: ${{ env.NODE_VERSION }}

        - name: install dependencies
          run: npm install

        - name: build
          run: npm run build

    test:
        name: test
        runs-on: ubuntu-latest
        needs: build

        steps:
        - uses: actions/checkout@v2

        - name: load/save cache
          uses: actions/cache@v2
          with:
              path: |
                  build
                  node_modules
                  .pnp
                  .pnp.js
              key: ${{ runner.os }}-package-lock-v1-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                  ${{ runner.os }}-package-lock-v1-

        - name: setup node.js
          uses: actions/setup-node@v1
          with:
              node-version: ${{ env.NODE_VERSION }}

        - name: install dependencies
          run: npm install

        - name: run tests
          run: npm test
        
    deploy-prod:
        name: deploy prod
        runs-on: ubuntu-latest
        needs: [build, test]
        if: github.ref == 'refs/heads/master'

        steps:
        - uses: actions/checkout@v2

        - name: load/save cache
          uses: actions/cache@v2
          with:
              path: |
                  build
                  node_modules
                  .pnp
                  .pnp.js
              key: ${{ runner.os }}-package-lock-v1-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                  ${{ runner.os }}-package-lock-v1-

        - name: setup node.js
          uses: actions/setup-node@v1
          with:
              node-version: ${{ env.NODE_VERSION }}

        - name: install dependencies
          run: npm install

        - name: build
          run: npm run build
          
        - name: deploy to prod
          uses: nogsantos/scp-deploy@master
          with:
              src: ./build/*
              host: ${{ secrets.SSH_HOST }}
              remote: ${{ secrets.SSH_DIR }}/${{ secrets.PROD_DIR }}
              port: ${{ secrets.SSH_PORT }}
              user: ${{ secrets.SSH_USER }}
              key: ${{ secrets.SSH_KEY }}

    deploy-staging:
        name: deploy staging
        runs-on: ubuntu-latest
        needs: [build, test]
        if: github.ref == 'refs/heads/staging'

        steps:
        - uses: actions/checkout@v2

        - name: load/save cache
          uses: actions/cache@v2
          with:
              path: |
                  build
                  node_modules
                  .pnp
                  .pnp.js
              key: ${{ runner.os }}-package-lock-v1-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                  ${{ runner.os }}-package-lock-v1-

        - name: setup node.js
          uses: actions/setup-node@v1
          with:
              node-version: ${{ env.NODE_VERSION }}

        - name: install dependencies
          run: npm install

        - name: build
          run: npm run build
        
        - name: deploy to staging
          uses: nogsantos/scp-deploy@master
          with:
              src: ./build/*
              host: ${{ secrets.SSH_HOST }}
              remote: ${{ secrets.SSH_DIR }}/${{ secrets.STAGING_DIR }}
              port: ${{ secrets.SSH_PORT }}
              user: ${{ secrets.SSH_USER }}
              key: ${{ secrets.SSH_KEY }}

